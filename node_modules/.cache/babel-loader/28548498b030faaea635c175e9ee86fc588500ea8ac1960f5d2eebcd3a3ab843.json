{"ast":null,"code":"var _jsxFileName = \"/Users/ilya.esenko/WebstormProjects/counter.redux/src/components/SetCounter.tsx\";\nimport React from 'react';\nimport { CounterInput } from \"./CounterInput\";\nimport { CounterButton } from \"./CounterButton\";\nimport c from '../counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SetCounter = props => {\n  const counterErrorClass = () => props.settingsError ? `${c.setCounter__error_input} + ${c.setCounter__input}` : c.setCounter__input;\n  const combineitedButton = () => {\n    props.counterHandler();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: c.setCounter,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: c.setCounter__wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.setCounter__minMaxInputs,\n        children: [/*#__PURE__*/_jsxDEV(CounterInput, {\n          value: props.minValue,\n          callback: props.minValueSet,\n          className: counterErrorClass()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CounterInput, {\n          value: props.maxValue,\n          callback: props.maxValueSet,\n          className: counterErrorClass()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.setCounter__buttonSet,\n        children: props.changeView ? /*#__PURE__*/_jsxDEV(CounterButton, {\n          name: 'Set',\n          callback: combineitedButton,\n          error: props.settingsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(CounterButton, {\n          name: 'Set',\n          callback: props.counterHandler,\n          error: props.settingsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: c.setCounter__error,\n        children: props.settingsError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: c.setCounter__error_text,\n          children: props.settingsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = SetCounter;\nvar _c;\n$RefreshReg$(_c, \"SetCounter\");","map":{"version":3,"names":["React","CounterInput","CounterButton","c","jsxDEV","_jsxDEV","SetCounter","props","counterErrorClass","settingsError","setCounter__error_input","setCounter__input","combineitedButton","counterHandler","className","setCounter","children","setCounter__wrapper","setCounter__minMaxInputs","value","minValue","callback","minValueSet","fileName","_jsxFileName","lineNumber","columnNumber","maxValue","maxValueSet","setCounter__buttonSet","changeView","name","error","setCounter__error","setCounter__error_text","_c","$RefreshReg$"],"sources":["/Users/ilya.esenko/WebstormProjects/counter.redux/src/components/SetCounter.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {CounterInput} from \"./CounterInput\";\r\nimport {CounterButton} from \"./CounterButton\";\r\nimport c from '../counter.module.css'\r\n\r\nexport type SetCounterPropsType = {\r\n    minValue: number\r\n    maxValue: number\r\n    minValueSet: (value: number) => void\r\n    maxValueSet: (value: number) => void\r\n    counterHandler: () => void\r\n    settingsError: string | null\r\n    changeView?: () => void\r\n}\r\n\r\n\r\nexport const SetCounter = (props: SetCounterPropsType) => {\r\n\r\n    const counterErrorClass = () =>\r\n       ( props.settingsError ? `${c.setCounter__error_input} + ${c.setCounter__input}` : c.setCounter__input)\r\n\r\n    const combineitedButton = () => {\r\n        props.counterHandler()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={c.setCounter}>\r\n            <div className={c.setCounter__wrapper}>\r\n                <div className={c.setCounter__minMaxInputs}>\r\n                    <CounterInput value={props.minValue}\r\n                                  callback={props.minValueSet}\r\n                                  className={counterErrorClass()}/>\r\n                    <CounterInput value={props.maxValue}\r\n                                  callback={props.maxValueSet}\r\n                                  className={counterErrorClass()}/>\r\n                </div>\r\n                <div className={c.setCounter__buttonSet}>\r\n                    {props.changeView ? <CounterButton name={'Set'} callback={combineitedButton} error={props.settingsError}/>:\r\n                        <CounterButton name={'Set'} callback={props.counterHandler} error={props.settingsError}/>\r\n                    }\r\n\r\n                </div>\r\n                <div className={c.setCounter__error}>\r\n                    {props.settingsError &&\r\n                        <div className={c.setCounter__error_text}>{props.settingsError}\r\n                        </div>}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAkB,OAAO;AACrC,SAAQC,YAAY,QAAO,gBAAgB;AAC3C,SAAQC,aAAa,QAAO,iBAAiB;AAC7C,OAAOC,CAAC,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAarC,OAAO,MAAMC,UAAU,GAAIC,KAA0B,IAAK;EAEtD,MAAMC,iBAAiB,GAAGA,CAAA,KACrBD,KAAK,CAACE,aAAa,GAAI,GAAEN,CAAC,CAACO,uBAAwB,MAAKP,CAAC,CAACQ,iBAAkB,EAAC,GAAGR,CAAC,CAACQ,iBAAkB;EAEzG,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BL,KAAK,CAACM,cAAc,CAAC,CAAC;EAE1B,CAAC;EAED,oBACIR,OAAA;IAAKS,SAAS,EAAEX,CAAC,CAACY,UAAW;IAAAC,QAAA,eACzBX,OAAA;MAAKS,SAAS,EAAEX,CAAC,CAACc,mBAAoB;MAAAD,QAAA,gBAClCX,OAAA;QAAKS,SAAS,EAAEX,CAAC,CAACe,wBAAyB;QAAAF,QAAA,gBACvCX,OAAA,CAACJ,YAAY;UAACkB,KAAK,EAAEZ,KAAK,CAACa,QAAS;UACtBC,QAAQ,EAAEd,KAAK,CAACe,WAAY;UAC5BR,SAAS,EAAEN,iBAAiB,CAAC;QAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/CrB,OAAA,CAACJ,YAAY;UAACkB,KAAK,EAAEZ,KAAK,CAACoB,QAAS;UACtBN,QAAQ,EAAEd,KAAK,CAACqB,WAAY;UAC5Bd,SAAS,EAAEN,iBAAiB,CAAC;QAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACNrB,OAAA;QAAKS,SAAS,EAAEX,CAAC,CAAC0B,qBAAsB;QAAAb,QAAA,EACnCT,KAAK,CAACuB,UAAU,gBAAGzB,OAAA,CAACH,aAAa;UAAC6B,IAAI,EAAE,KAAM;UAACV,QAAQ,EAAET,iBAAkB;UAACoB,KAAK,EAAEzB,KAAK,CAACE;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,gBACtGrB,OAAA,CAACH,aAAa;UAAC6B,IAAI,EAAE,KAAM;UAACV,QAAQ,EAAEd,KAAK,CAACM,cAAe;UAACmB,KAAK,EAAEzB,KAAK,CAACE;QAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG5F,CAAC,eACNrB,OAAA;QAAKS,SAAS,EAAEX,CAAC,CAAC8B,iBAAkB;QAAAjB,QAAA,EAC/BT,KAAK,CAACE,aAAa,iBAChBJ,OAAA;UAAKS,SAAS,EAAEX,CAAC,CAAC+B,sBAAuB;UAAAlB,QAAA,EAAET,KAAK,CAACE;QAAa;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACS,EAAA,GApCW7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}